%
%Check whether the GUI window is already opn
h = findall(0,'tag','ecosystem');

if(~isempty(h))
    
    %
    %If GUI window is already open, inform the user
     msgbox('The window is already open');  

else
    %
    %Else create the GUI window
    fig         =   figure( 'Name',             'Ecosystem',...
                            'Numbertitle',      'off',...
                            'tag',              'ecosystem',...
                            'units',            'normalized',...
                            'outerposition',    [0 0 1 1]);
    
    
    %
    %Get the screen size in order to adjust the fonts with repect to the
    %screen size
    scrsz       = get(groot, 'screensize');
    
    title_font  = scrsz(3)*15/1920;
    text_font   = scrsz(3)*13/1920;
    
%     inputs      = uipanel(  fig,...
%                             'title',            'Inputs',...
%                             'fontsize',         title_font,...
%                             'fontweight',       'bold',...
%                             'position',         [0.65 0.18 0.3 0.8]);
%     
    
    horzalign     = 0.63;
%     characPanel   = uipanel(  fig,...
%                               'title',          'Characteristic to display',...
%                               'fontsize',       title_font,...
%                               'fontweight',     'bold',...
%                               'position',       [horzalign, 0.2, 0.35, 0.28]);
    filePanel     = uipanel(  fig,...
                            'title',            'File to import',...
                            'fontsize',         title_font,...
                            'fontweight',       'bold',...
                            'position',         [horzalign 0.1 0.35 0.07]);
%     
%                     
%                  
%     
%     
%                     
%     %----------Equation panel
%     
%     
%     %
    %Create a panel to display the equation of harmonic oscillator motion                    
                            
    filename    =   uicontrol(  filePanel,...
                                'style',            'edit',...
                                'string',           'untitled.out',...
                                'fontsize',         text_font,...
                                'unit',             'normalized',...
                                'fontweight',       'bold',...
                                'position',         [0.05 0.2 0.9 0.8]);
   start        =   uicontrol(  fig,... 
                                    'style',            'pushbutton',...
                                    'String',           'Start',...
                                    'units',            'normalized',...
                                    'fontsize',         title_font,...
                                    'fontweight',       'bold',...
                                    'tag',              'start',...
                                    'position',         [0.63, 0.05, 0.1, 0.035],...
                                    'callback',         {@plotEcosystem, filename});
                                %'userdata',         struct('inputs', [], 'outputs', []),...    

   pause        =   uicontrol(  fig,... 
                                    'style',            'pushbutton',...
                                    'String',           'Pause',...
                                    'units',            'normalized',...
                                    'fontsize',         title_font,...
                                    'fontweight',       'bold',...
                                    'tag',              'pause',...
                                    'position',         [0.755, 0.05, 0.1, 0.035],...
                                    'data',             1,...
                                    'callback',         {@plotEcosystem, filename});
                                    
                                    %'userdata',         struct('inputs', [], 'outputs', []),...    
                                    %'callback',         {@oscillation,...
                                   % mass, k, l0, x0, v0, b, w, A, time, equation, simulation});                               
                                   
   restart      =   uicontrol(  fig,... 
                                    'style',            'pushbutton',...
                                    'String',           'Restart',...
                                    'units',            'normalized',...
                                    'fontsize',         title_font,...
                                    'fontweight',       'bold',...
                                    'tag',              'restart',...
                                    'position',         [0.88, 0.05, 0.1, 0.035],...
                                    'callback',         {@plotEcosystem, filename});
                                    %'userdata',         struct('inputs', [], 'outputs', []),...    
                                    %'callback',         {@oscillation,...
                                   % mass, k, l0, x0, v0, b, w, A, time, equation, simulation});

  characButtons = uibuttongroup(  fig,...
                                'Visible',  'on',...
                                'Title',    'Characteristic to display',...
                                'units',    'normalized',...
                                'fontsize',  title_font,...
                                'fontweight', 'bold',...
                                'position',       [horzalign, 0.2, 0.35, 0.28]);
        
  radioInfo     = struct( 'style',     'radiobutton',...
                    'units',    'normalized',...
                    'fontsize', title_font,...
                    'fontweight', 'bold');
                
  forceButton   = uicontrol(    'Parent', characButtons,...
                                radioInfo,...
                                'String',       'Force',...
                                'units',        'normalized',...
                                'tag',          'forceButton',...
                                'position',     [0.06 0.8 0.7 0.1]);
                            
  movesButton   = uicontrol(    'Parent', characButtons,...
                                radioInfo,...
                                'String',       'Number of moves',...
                                'units',        'normalized',...
                                'tag',          'nbMovesButton',...
                                'position',     [0.06 0.6 0.7 0.1]);                           
  
  offspringButton   = uicontrol(    'Parent', characButtons,...
                                radioInfo,...
                                'String',       'Number of offspring',...
                                'units',        'normalized',...
                                'tag',          'nbOffspringButton',...
                                'position',     [0.06 0.4 0.7 0.1]);
                            
 reproButton   = uicontrol(    'Parent', characButtons,...
                                radioInfo,...
                                'String',       'Reproduction threshold',...
                                'units',        'normalized',...
                                'tag',          'reproThrButton',...
                                'position',     [0.06 0.2 0.7 0.1]);                            
%         
%                     
%     %-----------Input panel
%     
%    %Horizontal position of the texts
%     horzalign = 0.03;
%     
%     %
%     %Common information shared by text boxes
%     text_info   =   struct(     'style',            'text',...
%                                 'fontsize',         text_font,...
%                                 'fontweight',       'bold',...
%                                 'horizontalalignment', 'left',...
%                                 'units',            'normalized'); 
%     
%     
%     %
%     %Common information shared by sliders to modify the input variables
%     slider_info =   struct(     'style',            'slider',...
%                                 'unit',             'normalized',....
%                                 'backgroundcolor',  'w');
%                             
%                             
%     slider_size = [0.6, 0.02];
%     text_delta_y = 0.085;
%     text_y = 0.875;
%     
%     
%     
%     %
%     %Create texts for input variables
%                     uicontrol(  inputs,             text_info,... 
%                                 'string',           'Simulation time [s]:',...
%                                 'position',         [horzalign, 0.95, 0.7,0.02]);
%                             
%                             
%                     uicontrol(  inputs,             text_info,...
%                                 'string',           'Length of the spring at rest [m]',...
%                                 'position',         [horzalign, text_y, 0.7, 0.05]);
%                             
%     
%     text_y = text_y - text_delta_y;
%     
%                     uicontrol(  inputs,             text_info,...
%                                 'string',           'Initial Position [m]',...
%                                 'position',         [horzalign, text_y, 0.7, 0.05]);
%                             
%     text_y = text_y - text_delta_y; 
%     
%                     uicontrol(  inputs,             text_info,...
%                                 'string',           'Initial Velocity [m/s]',...
%                                 'position',         [horzalign, text_y, 0.7, 0.05]);
%                             
%     text_y = text_y - text_delta_y;
%     
%                     uicontrol(  inputs,             text_info,...
%                                 'string',           'Mass (kg)',...
%                                 'position',         [horzalign, text_y, 0.3, 0.05]);
%                             
%     text_y = text_y - text_delta_y;
%     
%                     uicontrol(  inputs,             text_info,...
%                                 'string',           'Spring Constant (k) [N/m]',...
%                                 'position',         [horzalign, text_y, 0.7, 0.05]);
%                             
%     text_y = text_y - text_delta_y;
%     
%                     uicontrol(  inputs,             text_info,...
%                                 'string',           'Damping Coefficient (b) [kg/s]',...
%                                 'position',         [horzalign, text_y, 0.7, 0.05]);
%                             
%     text_y = text_y - text_delta_y;
%     
%                     uicontrol(  inputs,             text_info,...
%                                 'string',           'Driving Frequency (w) [rad/s]',...
%                                 'position',         [horzalign, text_y, 0.7, 0.05]);
%                             
%     text_y = text_y - text_delta_y;
%     
%                     uicontrol(  inputs,             text_info,...
%                                 'string',           'Driving Amplitude(A) [m]',...
%                                 'position',         [horzalign, text_y, 0.6, 0.05]);
%     
%     
%     
%     %
%     %Common information shared by edit boxes 
%     edit_info = struct('style', 'edit', 'unit', 'normalized', 'fontsize', text_font,...
%         'string', '0');
%     edit_size = [0.2 0.03];
%     edit_space = 0.7;
%     
%     text_y = 0.87;
%     
%     
%     %
%     %Create sliders and edit boxes for input variables that can be modified
%     %by the user
%     
%     %
%     % ---------------------------- TIME ------------------------------------
%     %Integration time 
%     %
%     
%     time        =   uicontrol(  inputs,             edit_info,...
%                                 'position',         [0.5, 0.95, 0.43, edit_size(2)]);
%     
%                             
%                             
%     %
%     %------------------------------ l0 -------------------------------------
%     % Length of the spring at rest 
%     %
%     
%     l0Slider    =   uicontrol(  inputs,             slider_info,...
%                                 'position',         [horzalign, text_y,slider_size],...
%                                 'userdata',         1,...
%                                 'min',              0,...
%                                 'max',              10);
%                             
%                             
%     l0          =   uicontrol(  inputs,             edit_info,...
%                                 'position',         [horzalign + edit_space, text_y,edit_size],...
%                                 'userdata',         1);
%                             
%                             
%     %
%     % ---------------------------- x0 -------------------------------------
%     % Initial position
%     %
%     
%     text_y = text_y - text_delta_y;
%     
%     x0Slider    =   uicontrol(  inputs,             slider_info,...
%                                 'position',         [horzalign, text_y,slider_size],...
%                                 'userdata',         2,...
%                                 'min',              0,...
%                                 'max',              10);
%                             
%     x0          =   uicontrol(  inputs,             edit_info,...
%                                 'position',         [horzalign + edit_space, text_y,edit_size],...
%                                 'userdata',         2);
%                             
%                             
%     %
%     % ---------------------------- v0 -------------------------------------
%     % Initial velocity
%     %
%     
%     text_y = text_y - text_delta_y;
%     
%     v0Slider    =   uicontrol(  inputs,             slider_info,...
%                                 'position',         [horzalign, text_y,slider_size],...
%                                 'userdata',         3,...
%                                 'min',              0,...
%                                 'max',              10);
%                             
%     v0          =   uicontrol(  inputs,             edit_info,...
%                                 'position',         [horzalign + edit_space, text_y,edit_size],...
%                                 'userdata',         3);
%                             
%     %
%     % ---------------------------- mass -----------------------------------
%     %                       
%                             
%     text_y = text_y - text_delta_y;
%     
%     massSlider  =   uicontrol(  inputs,             slider_info,...
%                                 'position',         [horzalign, text_y,slider_size],...
%                                 'userdata',         4,...
%                                 'min',              0,...
%                                 'max',              5);
%                             
%                             
%     mass        =   uicontrol(  inputs,             edit_info,...
%                                 'position',         [horzalign + edit_space, text_y,edit_size],...
%                                 'userdata',         4);
%                             
%                             
%     %
%     % ---------------------------- k -------------------------------------
%     % Spring constant
%     %
%     
%     text_y = text_y - text_delta_y;
%     
%     kSlider     =   uicontrol(  inputs,             slider_info,...
%                                 'position',         [horzalign,text_y,slider_size],...
%                                 'userdata',         5,...
%                                 'min',              0,...
%                                 'max',              10);
%                             
%                             
%     k           =   uicontrol(  inputs,             edit_info,...
%                                 'position',         [horzalign + edit_space, text_y,edit_size],...
%                                 'userdata',         5);
%                             
%     %
%     % ---------------------------- b -------------------------------------
%     % Damping coefficient
%     %
%     
%     text_y      = text_y - text_delta_y;
%     
%     bSlider     =	uicontrol(  inputs,             slider_info,...
%                                 'position',         [horzalign, text_y,slider_size],...
%                                 'userdata',         6,...
%                                 'min',              0,...
%                                 'max',              1);
%                             
%                             
%     b           =   uicontrol(  inputs,             edit_info,...
%                                 'position',         [horzalign + edit_space, text_y,edit_size],...
%                                 'userdata',         6);
%                             
%                             
%     %
%     % ---------------------------- w -------------------------------------
%     % Driving frequency
%     %
%     
%     
%     text_y      = text_y - text_delta_y;
%     
%     wSlider     =   uicontrol(  inputs,             slider_info,...
%                                 'position',         [horzalign, text_y,slider_size],...
%                                 'userdata',         7,...
%                                 'min',              0,...
%                                 'max',              1);
%                             
%                             
%     w           =   uicontrol(  inputs,             edit_info,...
%                                 'position',         [horzalign + edit_space, text_y,edit_size],...
%                                 'userdata',         7);
%     
%     %
%     % ---------------------------- A -------------------------------------
%     % Driving amplitude
%     %
%     
%     text_y      =   text_y - text_delta_y;
%     
%     
%     ASlider     =   uicontrol(  inputs,             slider_info,...
%                                 'position',         [horzalign, text_y,slider_size],...
%                                 'userdata',         8,...
%                                 'min',              0,...
%                                 'max',              10);
%                             
%                             
%     A           =   uicontrol(  inputs,             edit_info,...
%                                 'position',         [horzalign + edit_space, text_y,edit_size],...
%                                 'userdata',         8);
%         
%     
%     %=====================================================================            
%                 
%     %            
%     %Display w0, tau, w/w0 and phi using input variables in order to help
%     %the user to decide input values
%              
%     %
%     %Information shared by the text boxes which display the values
%     value_info  =   struct(     'style',            'text',...
%                                 'string',           'NaN',...
%                                 'fontsize',         text_font,...
%                                 'unit',             'normalized');
%                             
%                             
%     unit_info   =   struct(     'style',            'text',...
%                                 'fontsize',         text_font,...
%                                 'unit',             'normalized',...
%                                 'horizontalalignment', 'left');
%                             
%                             
%     value_align = 0.348;
%     text_size = [0.47 0.04];
%     unit_size = [0.2 0.04];
%     unit_align = 0.8;
%     
%     text_y = text_y - 0.07;
%     text_delta_y = text_delta_y/2;
%     
%     
%     
%     %Create text boxes for w0, tau, w/w0 and phi    
%     %
%     %--------------------------- tau -----------------------------------
%     %
%     
%     
%                     uicontrol(	inputs,             text_info,...
%                                 'string',           'tau = b/m',...
%                                 'position',         [horzalign, text_y, text_size]);
%                             
%                             
%     tau         =   uicontrol(  inputs,             value_info,...
%                                 'position',         [value_align, text_y, text_size]);
%                             
%                                             
%                     uicontrol(  inputs,             unit_info,...
%                                 'string',           '[s]',...
%                                 'position',         [unit_align, text_y, unit_size]);
%                             
%     %
%     % ---------------------------- w0 -------------------------------------
%     % 
%     
%     text_y = text_y - text_delta_y;
%     
%                     uicontrol(  inputs,             text_info,...
%                                 'string',           'w0 = sqrt(k/m)',...
%                                 'position',         [horzalign, text_y, text_size]);
%                             
%     omega       =   uicontrol(  inputs,             value_info,...
%                                 'position',         [value_align, text_y, text_size]);
%                             
%                     uicontrol(  inputs,             unit_info,...
%                                 'string',           '[rad]',...
%                                 'position',         [unit_align, text_y, unit_size]);
%                             
%    
%     %
%     % ---------------------------- w/w0 -------------------------------------
%     %                          
%                             
%                             
%     text_y = text_y - text_delta_y;
%     
%                     uicontrol(  inputs,             text_info,...
%                                 'string',           'w/w0',...
%                                 'position',         [horzalign, text_y, text_size]);
%                             
%                             
%     omegaRatio  =   uicontrol(  inputs,             value_info,...
%                                 'position',         [value_align, text_y, text_size]);
%                             
%                             
%     %
%     % ---------------------------- phi -------------------------------------
%     % 
%     
%     text_y = text_y - text_delta_y;
%     
%                     uicontrol(  inputs,             text_info,...
%                                 'string',           'phi',...
%                                 'position',         [horzalign, text_y, text_size]);
%                             
%     phi         = 	uicontrol(  inputs,             value_info,...
%                                 'position',         [value_align, text_y, text_size]);
%                             
%                             
%                     uicontrol(  inputs,             unit_info,...
%                                 'string',           '[rad]',...
%                                 'position',         [unit_align, text_y, unit_size]);
%                             
%                             
%     
%     %======================================================================
%     
%     %Set callbacks for sliders and edit boxes to make them interact
%     %used : setVal (for sliders) 
%     %       setSlider (for edit boxes)
%     
%     %
%     %Matrix containing the handles passed to callback functions
%     vals = [l0 x0 v0 mass k b w A];
%     sliders = [l0Slider, x0Slider v0Slider massSlider kSlider bSlider wSlider ASlider];
%     inter = [tau omega omegaRatio phi];
%     
%     set(massSlider, 'callback', {@setVal, vals, sliders, inter});
%     set(kSlider, 'callback', {@setVal, vals, sliders, inter});
%     set(l0Slider, 'callback', {@setVal, vals, sliders, inter});
%     set(x0Slider, 'callback', {@setVal, vals, sliders, inter});
%     set(v0Slider, 'callback', {@setVal, vals, sliders, inter});
%     set(bSlider, 'callback', {@setVal, vals, sliders, inter});
%     set(wSlider, 'callback', {@setVal, vals, sliders, inter});
%     set(ASlider, 'callback', {@setVal, vals, sliders, inter});
%     
%     set(mass, 'callback', {@setSlider, vals, sliders, inter, true});
%     set(k, 'callback', {@setSlider, vals, sliders, inter, true});
%     set(l0, 'callback', {@setSlider, vals, sliders, inter, true});
%     set(x0, 'callback', {@setSlider, vals, sliders, inter, false});
%     set(v0, 'callback', {@setSlider, vals, sliders, inter, false});
%     set(b, 'callback', {@setSlider, vals, sliders, inter, true});
%     set(w, 'callback', {@setSlider, vals, sliders, inter, false});
%     set(A, 'callback', {@setSlider, vals, sliders, inter, false});
%     
%     
%     %--------------------------------------------------------------------
%     %Checkbox to display simulation of mass motion
%     simulation      =   uicontrol(  inputs,...         
%                                     'style',            'checkbox',...
%                                     'String',           'Simulation',...
%                                     'units',            'normalized',...
%                                     'fontsize',         text_font,...
%                                     'fontweight',       'bold',...
%                                     'position',         [horzalign, 0.02, 0.27, 0.055],...
%                                     'Value',            1);
%     
%     %------------------Pushbutton to calculate the position and velocity of the mass     
%     calculate       =   uicontrol(  inputs,... 
%                                     'style',            'pushbutton',...
%                                     'String',           'Calculate',...
%                                     'units',            'normalized',...
%                                     'fontsize',         text_font,...
%                                     'fontweight',       'bold',...
%                                     'position',         [horzalign + edit_space*0.95, 0.02, 0.25, 0.055],...
%                                     'userdata',         struct('inputs', [], 'outputs', []),...    
%                                     'callback',         {@oscillation,...
%                                     mass, k, l0, x0, v0, b, w, A, time, equation, simulation});
%     
%     
%     
%     
%     filename        =   uicontrol(  fig,...
%                                     'style',            'edit',...
%                                     'string',           'Untitled',...
%                                     'fontsize',         text_font,...
%                                     'unit',             'normalized',...
%                                     'position',         [0.65 0.025 0.2 0.035]);     
%                                 
%                     
%                         uicontrol(  fig,...
%                                     'style',            'pushbutton',...
%                                     'String',           'Export CSV',...
%                                     'units',            'normalized',...
%                                     'fontsize',         text_font,...
%                                     'fontweight',       'bold',...
%                                     'position',         [0.87 0.025 0.08 0.035],...
%                                     'callback',         {@export_csv, calculate, filename});
    
          
    %=====================================================================
    %
    %----------------Axes to plot the results
    
    %Create tabs that will contain different axes
    graphTab        =   uitabgroup( fig,...
                                    'unit',             'normalized',...
                                    'position',         [horzalign 0.5 0.37 0.5]);
                                
    tab1            =   uitab(graphTab, 'title', 'Animal/Food Population');
     tab2           =   uitab(graphTab, 'title', 'Mean Energy');
     tab3            =   uitab(graphTab, 'title', 'Mean Force');
     %tab6            =   uitab(graphTab, 'title', 'Mean Number of Moves');
     %tab7            =   uitab(graphTab, 'title', 'Mean Number of Offspring');
    
    
      
    %
    %--------------------------------------------------------------------
    %Axes to plot simulation
    %
    axinfo          =   struct( 'units',            'normalized',...
                                'fontweight',       'bold',...
                                'fontsize',         text_font);
    simulationAxe = axes('Parent',   fig,...
                         axinfo,...
                        'position', [0.05 0.15 0.5 0.7],...
                        'tag',      'simulation');  
    
    xlabel('y');                
    ylabel('x');
    
    grid on
 %---------------------------------------   
 %Tab1   
 
    axposition = [0.14 0.15 0.8 0.8];
    axes(       'Parent' ,         tab1,...
                axinfo,...
                'position',         axposition,...
                'tag',              'population');
        
        
    ylabel('Population');
    xlabel('t');
    grid on
%---------------------------------------------
 %Tab2   
 
    axes(       'Parent' ,         tab2,...
                axinfo,...
                'position',         axposition,...
                'tag',              'MeanEnergy');
        
        
    ylabel('Mean Energy');
    xlabel('t');
    grid on
    
%---------------------------------------------
 %Tab3   
 
    axes(       'Parent' ,         tab3,...
                axinfo,...
                'position',         axposition,...
                'tag',              'MeanForce');
        
        
    ylabel('Mean Force');
    xlabel('t');
    grid on
    

   
end